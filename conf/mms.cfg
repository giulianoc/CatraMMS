{
	"log": {
		"mms": {
			"stdout": false,
			"pathName": "/var/catramms/logs/mmsEngineService/mmsEngineService.log",
			"level": "info",
			"errorPathName": "/var/catramms/logs/mmsEngineService/mmsEngineService-error.log",
			"pattern": "[%Y-%m-%d %H:%M:%S.%e] [%n] [%l] [tid %t] [%s:%#] %v",
			"type": "daily",
			"rotating": {
				"maxSize": "1G",
				"maxFiles": 10
			},
			"daily": {
				"rotationHour": 23,
				"rotationMinute": 59
			},
			"slowQuery": {
				"pathName": "/var/catramms/logs/mmsEngineService/mmsEngineService-slowquery.log",
				"defaultMaxQueryElapsed": 100,
				"maxQueryElapsed": {
					"insertPushed": 300
				}
			}
		},
		"api": {
			"stdout": false,
			"pathName": "/var/catramms/logs/mmsAPI/mmsAPI.log",
			"level": "info",
			"errorPathName": "/var/catramms/logs/mmsAPI/mmsAPI-error.log",
			"pattern": "[%Y-%m-%d %H:%M:%S.%e] [%n] [%l] [tid %t] [%s:%#] %v",
			"type": "daily",
			"rotating": {
				"maxSize": "1G",
				"maxFiles": 10
			},
			"daily": {
				"rotationHour": 23,
				"rotationMinute": 59
			},
			"slowQuery": {
				"pathName": "/var/catramms/logs/mmsAPI/mmsAPI-slowquery.log",
				"defaultMaxQueryElapsed": 100,
				"maxQueryElapsed": {
					"insertPushed": 300
				}
			}
		},
		"encoder": {
			"stdout": false,
			"pathName": "/var/catramms/logs/mmsEncoder/mmsEncoder.log",
			"level": "info",
			"errorPathName": "/var/catramms/logs/mmsEncoder/mmsEncoder-error.log",
			"pattern": "[%Y-%m-%d %H:%M:%S.%e] [%n] [%l] [tid %t] [%s:%#] %v",
			"type": "daily",
			"rotating": {
				"maxSize": "1G",
				"maxFiles": 10
			},
			"daily": {
				"rotationHour": 23,
				"rotationMinute": 59
			}
		}
	},
	"database": {
		"master": {
			"enginePoolSize": 30,
			"apiPoolSize": 10,
			"server": "tcp://127.0.0.1:3306",
			"userName": "mms"
		},
		"slave": {
			"enginePoolSize": 30,
			"apiPoolSize": 10,
			"server": "tcp://127.0.0.1:3306",
			"userName": "mms_RO"
		},
		"defaultCharacterSet": "utf8mb4",
		"password": "UsSrPLD02~jU8zuHn2wiBvmiL7kyxgO~L",
		"dbName": "mms",
		"selectTestingConnection": "select count(*) from MMS_TestConnection",
		"dbConnectionPoolStatsReportPeriodInSeconds": 300,
		// it includes ingestionroot, ingestionjob and encodingjob
		"ingestionWorkflowRetentionInDays": 60,
		"statisticRetentionInMonths": 12,
		"maxPageSize": 1000,
		"statisticsEnabled": true
	},
	"postgres": {
		"master": {
			"enginePoolSize": 30,
			"apiPoolSize": 10,
			"server": "127.0.0.1",
			"userName": "mms"
		},
		"slave": {
			"enginePoolSize": 30,
			"apiPoolSize": 10,
			"server": "127.0.0.1",
			"userName": "mms"
		},
		"password": "UsSrPLD02~jU8zuHn2wiBvmiL7kyxgO~L",
		"dbName": "mms",
		"selectTestingConnection": "select count(*) from MMS_TestConnection",
		"dbConnectionPoolStatsReportPeriodInSeconds": 300,
		// it includes ingestionroot, ingestionjob and encodingjob
		"ingestionWorkflowRetentionInDays": 60,
		"statisticRetentionInMonths": 12,
		"maxPageSize": 1000,
		"statisticsEnabled": true
	},
	"storage": {
		"path": "/var/catramms/storage",
		"freeSpaceToLeaveInEachPartitionInMB": 10,
		// may be different free space for partition 0000
		// because of MMSWorkingAreaRepository, ...
		"freeSpaceToLeaveInEachPartitionInMB_0000": 100000,
		"waitingNFSSync_maxMillisecondsToWait": 150000,
		"waitingNFSSync_milliSecondsWaitingBetweenChecks": 100
	},
	"scheduler": {
		"threadSleepInMilliSecs": 100,
		"checkIngestionTimesPeriodInMilliSecs": 5000,
		"checkEncodingTimesPeriodInMilliSecs": 5000,
		"threadsStatisticTimesPeriodInMilliSecs": 60000,
		"contentRetentionTimesSchedule": "* * * * * * 0,30",
		"dbDataRetentionTimesSchedule": "* * * * 6 0 0",
		"geoInfoTimesSchedule": "* * * * 5 0 0",
		"checkRefreshPartitionFreeSizeTimesSchedule": "* * * * 3 0 0",
		"mainAndBackupRunningHALiveRecordingTimesSchedule": "* * * * * * 15,30,45"
	},
	"download": {
		// starting from the second attempt, resume will be used
		"maxDownloadAttemptNumber": 5,
		"progressUpdatePeriodInSeconds": 2,
		"secondsWaitingAmongDownloadingAttempt": 5,
		"downloadChunkSizeInMegaBytes": 500
	},
	"mms": {
		"processorThreads": 4,
		// based on number of cpu/core
		// "maxAdditionalProcessorThreads": 3,
		"cpuUsageThreshold": 50,
		"geoService": {
			"enabled": true,
			"maxDaysBeforeUpdate": 1,
			"timeoutInSeconds": 10,

			"url": "https://pro.ip-api.com",
			"key": "HjqDxRW1iv1xfBV"
			// "url": "https://ipwhois.app/json/"
		},
		"maxFaceRecognitionNumber": 3,
		"confirmationCodeRetentionInDays": 30,
		"maxIngestionJobsPerEvent": 100,
		"doNotManageIngestionsOlderThanDays": 7,
		"ingestionJobsSelectPageSize": 500,
		"maxEncodingJobsPerEvent": 5,
		"maxEventManagementTimeInSeconds": 15,
		"dependencyExpirationInHours": 24,
		// retention of every content if not specified in the Parameters json section
		"contentRetentionInMinutesDefaultValue": 60,
		// IngestionJobs marked as SourceCopingInProgress, SourceMovingInProgress,
		// SourceUploadingInProgress, SourceDownloadingInProgress, not received
		// are set as Failed after the below retention
		"contentNotTransferredRetentionInHours": 3,
		// in case of live recording, MMS starts to prepare resources
		// a number of minutes before the beginning of the live to record
		"liveRecording_timeBeforeToPrepareResourcesInMinutes": 5,
		"localCopyTaskEnabled": false,
		"guiProtocol": "https",
		"guiHostname": "gui.cloud-mms.com",
		"guiPort": 443,
		"predefinedWorkflowLibraryDir": "/opt/catramms/CatraMMS/predefinedWorkflowLibrary",
		"locks": {
			// We have to reduce the following log messages
			//		MMSEngineDBFacade_Lock.cpp:127 setLock Ingestion, label: APIIngestion, already locked by ...
			// because the previous message could cause:
			// - delay managing the tasks
			// - failure in case it will not be able to take the lock and run the task
			// To do that we have to tune the parameters in this section ('Locks')
			// and the parameters in the 'Scheduler' section

			// enough high to avoid that the request is not managed and fails
			"maxSecondsToWaitAPIIngestionLock": 60,

			// enough high to avoid that the request is not managed and fails
			"maxSecondsToWaitUpdateEncodingJobLock": 120,

			// enough high to avoid that the request is not managed and fails
			"maxSecondsToWaitUpdateIngestionJobLock": 120,

			// enough high to avoid that the request is not managed and fails
			"maxSecondsToWaitSetNotToBeExecutedLock": 120,

			// set to 0 to leave priority on API::Ingestion.
			// Remember that Engine is very aggressive to take the lock since we have
			// many Processors and an aggressive schedule (2000 millisecs).
			// In case we will not set to 0, API::Ingestion will not be able to take the lock
			// and ingestions calls will get timeout (internally will be always Already Locked)
			"maxSecondsToWaitCheckIngestionLock": 0,

			// a bit in order to take the encodings left by the other Engines
			// it should be less than checkEncodingTimesPeriodInMilliSecs
			"maxSecondsToWaitCheckEncodingJobLock": 2,

			// a bit in order to take the chunks left by the other Engines
			// it should be less than mainAndBackupRunningHALiveRecordingTimesSchedule
			"maxSecondsToWaitMainAndBackupLiveChunkLock": 5
		}
	},
	"api": {
		"registerUserEnabled": true,
		"protocol": "https",
		"hostname": "mms-api.cloud-mms.com",
		"port": 443,
		"version": "1.0.1",
		"workflowURI": "/workflow",
		"ingestionURI": "/ingestionJob",
		// timeout consistent with nginx configuration (fastcgi_read_timeout)
		"timeoutInSeconds": 120,
		"threadsNumber": 10,
		// make sure FcgidMaxRequestLen is set correctly
		"maxContentLength": 1000000,
		"workspaceDefaults": {
			"encodingPriority": "low",
			"encodingPeriod": "daily",
			"maxIngestionsNumber": 20000,
			"maxStorageInMB": 1000,
			"expirationInDays": 30
		},
		"adminEmailAddresses": [
			"aaa@bbb.ccc"
		],
		"sharedEncodersPool": {
			"label": "sharedEncoders",
			"encodersLabel": [
				"encoder_1"
			]
		},
		"activeDirectory": {
			"enabled": false,
			// "ldapURL": "ldap://media.int:389",
			"ldapURL": "ldaps://media.int:636",
			"certificatePathName": "/home/mms/mms/conf/SRG_SSR_C3_Machine_CA_1.cer",
			"managerUserName": "svc-rsi-adread09",
			"managerPassword": "MP-data-processor",
			"baseDn": "DC=media,DC=int",
			"defaultWorkspaceKeys": ""
		},
		"binary": {
			"protocol": "https",
			"hostname": "mms-binary.cloud-mms.com",
			"port": 443,
			"version": "1.0.1",
			"ingestionURI": "/binary",
			// timeout consistent with nginx configuration (fastcgi_read_timeout in catrammsBinaryServer.nginx)
			"timeoutInSeconds": 900,
			"maxContentLength": 10737418240,
			// 10KB
			// "binaryBufferLength": 101024,
			// WebServerPort is used to get the file upload progress
			"webServerPort": 80,
			"progressURI": "/catramms/binary/uploadProgress",
			"progressUpdatePeriodInSeconds": 4,
			"maxProgressCallFailures": 5
		},
		"delivery": {
			"defaultTTLInSeconds": 120,
			"defaultMaxRetries": 10,
			"defaultRedirect": false,
			"deliveryProtocol": "https",
			"deliveryHost_authorizationThroughParameter": "delivery.catrasoft.cloud",
			"deliveryHost_authorizationThroughPath": "delivery-path.catrasoft.cloud"
		}
	},
	"encoding": {
		"predefinedProfiles": {
			"videoDir": "/opt/catramms/CatraMMS/predefinedEncodingProfiles/video",
			"audioDir": "/opt/catramms/CatraMMS/predefinedEncodingProfiles/audio",
			"imageDir": "/opt/catramms/CatraMMS/predefinedEncodingProfiles/image"
		},
		"maxEncodingFailures": 3,
		"mp4Encoder": "FFMPEG",
		"mpeg2TSEncoder": "FFMPEG",
		"intervalInSecondsToCheckEncodingFinished": 5
	},
	"ffmpeg": {
		"path": "/opt/catramms/ffmpeg-4.2.2/bin",
		"tempDir": "/var/catramms/storage/MMSTranscoderWorkingAreaRepository/ffmpeg",
		"endlessRecursivePlaylistDir": "/var/catramms/storage/MMSTranscoderWorkingAreaRepository/ffmpegEndlessRecursivePlaylist",
		"ttfFontDir": "/opt/catramms/CatraMMS/ttfFont",
		"cpuUsageThresholdForEncoding": 40,
		"cpuUsageThresholdForRecording": 50,
		"cpuUsageThresholdForProxy": 60,
		"intervalInSecondsBetweenEncodingAcceptForInternalEncoder": 10,
		"intervalInSecondsBetweenEncodingAcceptForExternalEncoder": 120,
		"monitorCheckInSeconds": 15,
		"liveRecorderChunksIngestionCheckInSeconds": 5,
		// same configured in scripts/tvController.sh
		"tvChannelConfigurationDirectory": "/var/catramms/tv",
		"encodingCompletedRetentionInSeconds": 300,
		"encoderThreadsNumber": 5,
		"liveRecorderVirtualVODIngestionInSeconds": 30,
		"liveRecorderVirtualVODRetention": "30m",
		"liveRecorderVirtualVODImageLabel": "LiveRecorderVirtualVOD",
		"encoderUser": "1",
		"encoderPassword": "SU1.8ZO1O2zTg_5SvI12rfN9oQdjRru90XbMRSvACIxftIhdGvwh.s4NkL6Vy9D6en",
		// timeout consistent with nginx configuration (fastcgi_read_timeout)
		"encoderTimeoutInSeconds": 30,
		"encoderProgressURI": "/catramms/v1/encoder/progress",
		"encoderStatusURI": "/catramms/v1/encoder/status",
		"encoderInfoURI": "/catramms/v1/encoder/info",
		"encoderInfoTimeout": 2,
		"encodeURI": "/catramms/v1/encoder/encode",
		"overlayImageOnVideoURI": "/catramms/v1/encoder/overlayImageOnVideo",
		"overlayTextOnVideoURI": "/catramms/v1/encoder/overlayTextOnVideo",
		"generateFramesURI": "/catramms/v1/encoder/generateFrames",
		"slideShowURI": "/catramms/v1/encoder/slideShow",
		"liveRecorderURI": "/catramms/v1/encoder/liveRecorder",
		"liveProxyURI": "/catramms/v1/encoder/liveProxy",
		"liveGridURI": "/catramms/v1/encoder/liveGrid",
		"videoSpeedURI": "/catramms/v1/encoder/videoSpeed",
		"pictureInPictureURI": "/catramms/v1/encoder/pictureInPicture",
		"introOutroOverlayURI": "/catramms/v1/encoder/introOutroOverlay",
		"cutFrameAccurateURI": "/catramms/v1/encoder/cutFrameAccurate",
		"addSilentAudioURI": "/catramms/v1/encoder/addSilentAudio",
		"encoderKillEncodingURI": "/catramms/v1/encoder"
		"encoderChangeLiveProxyPlaylistURI": "/catramms/v1/encoder/liveProxy/playlist",
		"encoderChangeLiveProxyOverlayTextURI": "/catramms/v1/encoder/liveProxy/overlayText"
	},
	"aws": {
		"keyPairId": "APKAUYWFOBAADUMU4IGK",
		"privateKeyPEMPathName": "/opt/catramms/CatraMMS/conf/pk-APKAUYWFOBAADUMU4IGK.pem",
		"vodCloudFrontHostName": "d3ao8qf3jbneud.cloudfront.net"
	},
	"youTubeDl": {
		"path": "/opt/catramms/youtube-dl",
		"pythonPathName": "/usr/bin/python3"
	},
	"computerVision": {
		"cascadePath": "/opt/catramms/opencv/share/opencv4/haarcascades",
		"defaultScale": 1.1,
		"defaultMinNeighbors": 2,
		"defaultTryFlip": true
	},
	"FacebookGraphAPI": {
		"protocol": "https",
		"hostName": "graph.facebook.com",
		"videoHostName": "graph-video.facebook.com",
		"port": 443,
		"version": "v15.0",
		"timeout": 120,
		// app-id
		"clientId": "1862418063793547",
		"clientSecret": "04a76f8e11e9dc70ea5975649a91574c",
		"redirectURL": "https://mms-gui.catramms-cloud.com/catramms/rest/api/facebookCallback",
		"accessTokenURI": "/oauth/access_token",
		"liveVideosURI": "/__NODEID__/live_videos"
	},
	"YouTubeDataAPI": {
		"protocol": "https",
		"hostName": "www.googleapis.com",
		"port": 443,
		"timeout": 120,
		"timeoutForUploadVideo": 600,
		"uploadVideoURI": "/upload/youtube/v3/videos?uploadType=resumable&part=snippet,status,contentDetails",
		"liveBroadcastURI": "/youtube/v3/liveBroadcasts?part=snippet,contentDetails,status",
		"liveStreamURI": "/youtube/v3/liveStreams?part=snippet,cdn,contentDetails,status",
		"liveBroadcastBindURI": "/youtube/v3/liveBroadcasts/bind?id=__BROADCASTID__&part=snippet&streamId=__STREAMID__",
		"refreshTokenURI": "/oauth2/v4/token",
		"clientId": "700586767360-96om12ccsf16m41qijrdagkk0oqf2o7m.apps.googleusercontent.com",
		"clientSecret": "Uabf92wFTF80vOL3z_zzRUtT"
	},
	"EmailNotification": {
		"protocol": "smtps",
		"server": "ssl0.ovh.net",
		"port": 465,
		"userName": "mms.technical.support@catrasoft.cloud",
		"password": "a5L8jF.2Ugn0KsuBC7rYBCuZeVJcfwrBP",
		"from": "mms.technical.support@catrasoft.cloud",
		"cc": "mms.technical.support@catrasoft.cloud"
	}
}
