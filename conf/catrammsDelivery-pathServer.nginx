
	access_log   /var/catramms/logs/nginx/mms-delivery-path.access.log main;
	error_log    /var/catramms/logs/nginx/mms-delivery-path.error.log error;

	root /var/catramms/storage/MMSRepository/;

	#nel caso di un externalDelivery abbiamo solo il servizion nginx di delivery-path running, non abbiamo il servizio di api
	#Viene aggiunto quindi l'api status solo per verificare che l'agent sia up and running
	location /catramms {
		if ($request_method = GET) {
			rewrite ^/catramms/([0-9]+.[0-9]+.[0-9]+)/status/?$ /api?x-api-version=$1&x-api-method=status last;
			rewrite ^/catramms/([0-9]+.[0-9]+.[0-9]+)/avgBandwidthUsage/?$ /api?x-api-version=$1&x-api-method=avgBandwidthUsage last;
		}
	}

	#https://www.keycdn.com/support/nginx-location-directive
	#match qualunque URL o URI che inizia con /healthy.txt
	location /healthy.txt {
		return 200;
	}

	#authorization through path
	#next location manage any request: .mp4, .m3ud, .ts
	location ~ ^/token_ {

		#rewrite ^(.*)/token_([a-fA-F0-9]+)/(.*) $1/$3 last;
		rewrite ^/token_([a-zA-Z0-9\-_=,]+)/(.*) /$2 last;
	}

	#1 e poi #5
	location ~ ^/(MMS_|ExternalStorage_|MMSLive) {
		#Uso una coda abbondante per gestire le richieste contemporanee.
		#Consideriamo che solo la pagina mediaItems.xhtml genera 50 richieste contemporanee
		#per il download delle picture (vedi commento in nginx.conf)
		#Con nodelay le richieste non saranno evase secondo il rate indicato in nginx.conf
		#ma tutte istantaneamente.
		#Nota: parliamo dello stesso client IP.
		limit_req zone=mmsDeliveryLimit burst=100 nodelay;

		auth_request /catramms/delivery/checkAuthorizationThroughPath;

		if ($http_Origin) {
			set $origin '$http_Origin';
		}
		if ($http_Origin = "") {
			set $origin '*';
		}
		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Origin' '$origin';
			#add_header 'Access-Control-Allow-Origin' 'https://$guiHostName';
			add_header 'Access-Control-Allow-Credentials' 'true';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
		}
	}

	#2
	#match esattamente l'URI /catramms/delivery/checkAuthorizationThroughPath
	location = /catramms/delivery/checkAuthorizationThroughPath {
		internal;

		proxy_pass http://$deliveryHostName/catramms/delivery/authorizationThroughPath;
		#$host will be mms-delivery.restream.ovh
		proxy_set_header Host $host;
		proxy_pass_request_body off;
		proxy_set_header Content-Length "";
		#proxy_set_header X-Original-METHOD $request_method;
		#proxy_set_header X-Original-METHOD $token;
		#request_uri:
		# per https://www.webhosting24.com/understanding-nginx-request_uri/, $request_uri viene popolata come /understanding-nginx-request_uri/
		# per https://www.webhosting24.com/cp/cart.php?a=add&domain=register, $request_uri viene popolata come /cp/cart.php?a=add&domain=register
		# per https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.2, $request_uri viene popolata come /Protocols/rfc2616/rfc2616-sec3.html
		proxy_set_header X-Original-URI $request_uri;
	}

	#3
	#match qualunque URL o URI che inizia con /catramms/delivery/authorizationThroughPath
	location /catramms/delivery/authorizationThroughPath {
		allow 127.0.0.1;
		deny all;
		if ($request_method = GET) {
			rewrite ^/catramms/delivery/authorizationThroughPath/?$ /api?x-api-method=deliveryAuthorizationThroughPath last;
		}
	}

	#4
	#match qualunque URL o URI che inizia con /api
	location /api {
		internal;

		fastcgi_read_timeout 120;

		#the api fastcgi listen to 8010 port (see scripts/mmsApi.sh)
		fastcgi_pass   127.0.0.1:8010;
		include /opt/catramms/nginx/conf/fastcgi_params;
	}

	#match qualunque URL o URI che inizia con /
	location / {
		return 403;
		break;
	}

